#!/bin/bash
#
# [PlexGuide Ansible Role]
#
# Maintainer & Modded By: Admin9705 & Deiteq
# URL:                    https://plexguide.com
#
# Licensed under GNU General Public License v3.0 GPL-3 (in short)
#
#   You may copy, distribute and modify the software as long as you track
#   changes/dates in source files. Any modifications to our software
#   including (via compiler) GPL-licensed code must also be made available
#   under the GPL along with build & install instructions.
#
#################################################################################
# Original Ansible Role: l3uddz, Desimaniac - cloudbox.rocks
#################################################################################
---
- name: "Establish Facts"
  set_fact:
    switch="on"
    updatecheck="default"

- name: "Docker Check"
  stat:
    path: "/usr/bin/docker"
  register: check

- name: "Docker Version Check - True"
  shell: "docker --version | awk '{print $3}'"
  register: updatecheck

- debug:
    msg: " {{ updatecheck }} "

- name: "Switch - On"
  set_fact:
    switch="off"
  when: updatecheck.stdout == "18.06.0-ce,"

- debug:
    msg: "Switch - {{ switch }}"

- debug:
    msg: "UpdateCheck - {{ updatecheck }}"

- name: Install required packages
  apt: "name={{item}} state=present"
  with_items:
    - apt-transport-https
    - ca-certificates
    - software-properties-common
  when: switch == "on"

- name: Add official gpg signing key
  apt_key:
    id: 0EBFCD88
    url: https://download.docker.com/linux/ubuntu/gpg
  when: switch == "on"

- name: "Stop All Containers"
  shell: "docker stop $(docker ps -a -q)"
  ignore_errors: yes
  when:
    - check.stat.exists == True
    - switch == "on"

- name: Official Repo
  apt_repository:
    repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} edge"
  register: apt_docker_repositories
  when: switch == "on"

- name: Update APT packages list
  apt:
    update_cache: yes
  when: apt_docker_repositories.changed and switch == "on"

- name: Release docker-ce from hold
  dpkg_selections:
    name: docker-ce
    selection: install
  when: switch == "on"

- name: Install docker-ce
  apt:
    name: docker-ce=18.06.0~ce~3-0~ubuntu
    state: present
    update_cache: yes
    force: yes
  when: switch == "on"

- name: Put docker-ce into hold
  dpkg_selections:
    name: docker-ce
    selection: hold
  when: switch == "on"

- name: Uninstall docker-py pip module
  pip:
    name: docker-py
    state: absent
  ignore_errors: yes
  when: switch == "on"

- name: Install docker pip module
  pip:
    name: docker
    state: latest
  ignore_errors: yes
  when: switch == "on"

- name: Check docker daemon.json exists
  stat:
    path: /etc/docker/daemon.json
  register: docker_daemon

- name: Stop docker to enable overlay2
  systemd: state=stopped name=docker enabled=yes
  when:
    - docker_daemon.stat.exists == False
    - switch == "on"

- name: Import daemon.json
  copy: "src=daemon.json dest=/etc/docker/daemon.json force=yes mode=0775"
  when:
    - docker_daemon.stat.exists == False
    - switch == "on"

- name: Start docker (Please Wait)
  systemd: state=started name=docker enabled=yes
  when:
    - docker_daemon.stat.exists == False
    - switch == "on"

- name: "Wait for 20 seconds before commencing"
  wait_for:
    timeout: 20
  when: switch == "on"

- name: Check override folder exists
  stat:
    path: /etc/systemd/system/docker.service.d
  register: docker_override

- name: Create override folder
  file: "path=/etc/systemd/system/docker.service.d state=directory mode=0775"
  when:
    - docker_override.stat.exists == False
    - switch == "on"
  tags: docker_standard

- name: Import override file
  copy: "src=override.conf dest=/etc/systemd/system/docker.service.d/override.conf force=yes mode=0775"
  tags: docker_standard
  when: switch == "on"

- name: create plexguide network
  docker_network:
    name: "plexguide"
    state: present
  tags: docker_standard
  when: switch == "on"

- name: "Start All Containers"
  shell: "docker start $(docker ps -a -q)"
  ignore_errors: yes
  when:
    - switch == "on"
    - check.stat.exists == True
